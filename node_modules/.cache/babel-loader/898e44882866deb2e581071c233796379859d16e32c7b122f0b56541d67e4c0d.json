{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { auth } from \"../Authentication/firebase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\n\n// Extract only the necessary fields from Firebase user object\nconst extractUserData = user => ({\n  uid: user.uid,\n  email: user.email,\n  displayName: user.displayName\n});\nexport const signup = createAsyncThunk(\"user/signup\", async ({\n  firstName,\n  email,\n  password\n}) => {\n  const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n  const user = userCredential.user;\n  return {\n    displayName: firstName,\n    ...extractUserData(user)\n  };\n});\nexport const login = createAsyncThunk(\"user/login\", async ({\n  email,\n  password\n}) => {\n  const userCredential = await signInWithEmailAndPassword(auth, email, password);\n  const user = userCredential.user;\n  return extractUserData(user);\n});\nconst initialState = {\n  userData: {\n    uid: \"\",\n    email: \"\",\n    displayName: \"\"\n  },\n  loading: false\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    getCoordinates(state, action) {\n      state.longitude = action.payload.longitude;\n      state.latitude = action.payload.latitude;\n    },\n    logout(state) {\n      state.userData = {\n        uid: \"\",\n        email: \"\",\n        displayName: \"\"\n      };\n    },\n    setProfileData(state, action) {\n      state.userData.email = action.payload.email;\n      state.userData.displayName = action.payload.displayName;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(signup.pending, state => {\n      state.loading = true;\n    }).addCase(signup.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userData = action.payload;\n    }).addCase(signup.rejected, state => {\n      state.loading = false;\n    });\n    builder.addCase(login.pending, state => {\n      state.loading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userData = action.payload;\n    }).addCase(login.rejected, state => {\n      state.loading = false;\n    });\n  }\n});\nexport default userSlice.reducer;\nexport const {\n  getCoordinates,\n  logout,\n  setProfileData\n} = userSlice.actions;\nexport const selectUserData = state => state.user.userData || {};","map":{"version":3,"names":["createSlice","createAsyncThunk","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","extractUserData","user","uid","email","displayName","signup","firstName","password","userCredential","login","initialState","userData","loading","userSlice","name","reducers","getCoordinates","state","action","longitude","payload","latitude","logout","setProfileData","extraReducers","builder","addCase","pending","fulfilled","rejected","reducer","actions","selectUserData"],"sources":["D:/Projects/ecommerce-app/src/redux/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { auth } from \"../Authentication/firebase\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\n// Extract only the necessary fields from Firebase user object\r\nconst extractUserData = (user) => ({\r\n  uid: user.uid,\r\n  email: user.email,\r\n  displayName: user.displayName,\r\n});\r\n\r\nexport const signup = createAsyncThunk(\r\n  \"user/signup\",\r\n  async ({ firstName, email, password }) => {\r\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    const user = userCredential.user;\r\n    return {\r\n      displayName: firstName,\r\n      ...extractUserData(user),\r\n    };\r\n  }\r\n);\r\n\r\nexport const login = createAsyncThunk(\"user/login\", async ({ email, password }) => {\r\n  const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n  const user = userCredential.user;\r\n  return extractUserData(user);\r\n});\r\n\r\nconst initialState = {\r\n  userData: {\r\n    uid: \"\",\r\n    email: \"\",\r\n    displayName: \"\",\r\n  },\r\n  loading: false,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    getCoordinates(state, action) {\r\n      state.longitude = action.payload.longitude;\r\n      state.latitude = action.payload.latitude;\r\n    },\r\n    logout(state) {\r\n      state.userData = {\r\n        uid: \"\",\r\n        email: \"\",\r\n        displayName: \"\",\r\n      };\r\n    },\r\n    setProfileData(state, action) {\r\n      state.userData.email = action.payload.email;\r\n      state.userData.displayName = action.payload.displayName;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(signup.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(signup.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.userData = action.payload;\r\n      })\r\n      .addCase(signup.rejected, (state) => {\r\n        state.loading = false;\r\n      });\r\n\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.userData = action.payload;\r\n      })\r\n      .addCase(login.rejected, (state) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n\r\nexport const { getCoordinates, logout, setProfileData } = userSlice.actions;\r\n\r\nexport const selectUserData = (state) => state.user.userData || {};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}