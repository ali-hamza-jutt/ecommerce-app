{"ast":null,"code":"// productsSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchProducts } from '../apis/fetchProducts'; // Import the function from api.js\n\nexport const fetchProductsThunk = createAsyncThunk('products/fetchProducts', async () => {\n  try {\n    const data = await fetchProducts(); // Call the imported function\n    console.log(data); // This should log the full data\n    return data;\n  } catch (error) {\n    throw new Error(error.message); // Handle errors\n  }\n});\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState: {\n    items: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProductsThunk.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProductsThunk.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.items = action.payload.products; // Adjust based on the actual structure of the response\n    }).addCase(fetchProductsThunk.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchProducts","fetchProductsThunk","data","console","log","error","Error","message","productsSlice","name","initialState","items","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","products","rejected","reducer"],"sources":["D:/Projects/ecommerce-app/src/redux/productSlice.js"],"sourcesContent":["// productsSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { fetchProducts } from '../apis/fetchProducts'; // Import the function from api.js\r\n\r\nexport const fetchProductsThunk = createAsyncThunk('products/fetchProducts', async () => {\r\n  try {\r\n    const data = await fetchProducts(); // Call the imported function\r\n    console.log(data); // This should log the full data\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(error.message); // Handle errors\r\n  }\r\n});\r\n\r\nconst productsSlice = createSlice({\r\n  name: 'products',\r\n  initialState: {\r\n    items: [],\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProductsThunk.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchProductsThunk.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.items = action.payload.products; // Adjust based on the actual structure of the response\r\n      })\r\n      .addCase(fetchProductsThunk.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default productsSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,aAAa,QAAQ,uBAAuB,CAAC,CAAC;;AAEvD,OAAO,MAAMC,kBAAkB,GAAGF,gBAAgB,CAAC,wBAAwB,EAAE,YAAY;EACvF,IAAI;IACF,MAAMG,IAAI,GAAG,MAAMF,aAAa,CAAC,CAAC,CAAC,CAAC;IACpCG,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC;IACnB,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;EAClC;AACF,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAGV,WAAW,CAAC;EAChCW,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,MAAM;IACdP,KAAK,EAAE;EACT,CAAC;EACDQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACf,kBAAkB,CAACgB,OAAO,EAAGC,KAAK,IAAK;MAC9CA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDI,OAAO,CAACf,kBAAkB,CAACkB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACxDF,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACP,KAAK,GAAGS,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAC;IACzC,CAAC,CAAC,CACDN,OAAO,CAACf,kBAAkB,CAACsB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACN,MAAM,GAAG,QAAQ;MACvBM,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACf,KAAK,CAACE,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeC,aAAa,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}