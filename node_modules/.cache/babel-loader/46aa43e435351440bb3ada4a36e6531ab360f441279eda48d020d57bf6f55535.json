{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ecommerce-app\\\\src\\\\components\\\\ProductList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProductsThunk } from '../redux/productSlice';\nimport ProductCard from './ProductCard';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    categoryId\n  } = useParams(); // Get categoryId from URL parameters\n  const products = useSelector(state => state.products.items);\n  const productStatus = useSelector(state => state.products.status);\n  const error = useSelector(state => state.products.error);\n  useEffect(() => {\n    if (categoryId) {\n      dispatch(fetchProductsThunk(categoryId)); // Pass categoryId to the thunk\n    }\n  }, [categoryId, dispatch]);\n  let content;\n  if (productStatus === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }, this);\n  } else if (productStatus === 'succeeded') {\n    content = products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n      product: product\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this));\n  } else if (productStatus === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductList, \"S4nWwj5qtYVIUx5zggJlU8xVB0E=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector, useSelector];\n});\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchProductsThunk","ProductCard","useParams","jsxDEV","_jsxDEV","ProductList","_s","dispatch","categoryId","products","state","items","productStatus","status","error","content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","id","className","_c","$RefreshReg$"],"sources":["D:/Projects/ecommerce-app/src/components/ProductList.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchProductsThunk } from '../redux/productSlice';\r\nimport ProductCard from './ProductCard';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ProductList = () => {\r\n    const dispatch = useDispatch();\r\n    const { categoryId } = useParams(); // Get categoryId from URL parameters\r\n    const products = useSelector((state) => state.products.items);\r\n    const productStatus = useSelector((state) => state.products.status);\r\n    const error = useSelector((state) => state.products.error);\r\n\r\n    useEffect(() => {\r\n        if (categoryId) {\r\n            dispatch(fetchProductsThunk(categoryId)); // Pass categoryId to the thunk\r\n        }\r\n    }, [categoryId, dispatch]);\r\n\r\n    let content;\r\n\r\n    if (productStatus === 'loading') {\r\n        content = <p>Loading...</p>;\r\n    } else if (productStatus === 'succeeded') {\r\n        content = products.map((product) => (\r\n            <ProductCard key={product.id} product={product} />\r\n        ));\r\n    } else if (productStatus === 'failed') {\r\n        content = <p>{error}</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            {content}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,uBAAuB;AAC1D,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU;EAAW,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EACpC,MAAMO,QAAQ,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAACE,KAAK,CAAC;EAC7D,MAAMC,aAAa,GAAGb,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAACI,MAAM,CAAC;EACnE,MAAMC,KAAK,GAAGf,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAACK,KAAK,CAAC;EAE1DjB,SAAS,CAAC,MAAM;IACZ,IAAIW,UAAU,EAAE;MACZD,QAAQ,CAACP,kBAAkB,CAACQ,UAAU,CAAC,CAAC,CAAC,CAAC;IAC9C;EACJ,CAAC,EAAE,CAACA,UAAU,EAAED,QAAQ,CAAC,CAAC;EAE1B,IAAIQ,OAAO;EAEX,IAAIH,aAAa,KAAK,SAAS,EAAE;IAC7BG,OAAO,gBAAGX,OAAA;MAAAY,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC/B,CAAC,MAAM,IAAIR,aAAa,KAAK,WAAW,EAAE;IACtCG,OAAO,GAAGN,QAAQ,CAACY,GAAG,CAAEC,OAAO,iBAC3BlB,OAAA,CAACH,WAAW;MAAkBqB,OAAO,EAAEA;IAAQ,GAA7BA,OAAO,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CACpD,CAAC;EACN,CAAC,MAAM,IAAIR,aAAa,KAAK,QAAQ,EAAE;IACnCG,OAAO,gBAAGX,OAAA;MAAAY,QAAA,EAAIF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC5B;EAEA,oBACIhB,OAAA;IAAKoB,SAAS,EAAC,uCAAuC;IAAAR,QAAA,EACjDD;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACd,EAAA,CA9BID,WAAW;EAAA,QACIP,WAAW,EACLI,SAAS,EACfH,WAAW,EACNA,WAAW,EACnBA,WAAW;AAAA;AAAA0B,EAAA,GALvBpB,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}