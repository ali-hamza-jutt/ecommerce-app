{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchProducts } from '../apis/fetchProducts';\nexport const fetchProductsThunk = createAsyncThunk('products/fetchProducts', async categoryId => {\n  try {\n    const data = await fetchProducts(categoryId);\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n});\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState: {\n    items: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProductsThunk.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProductsThunk.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.items = action.payload.products;\n    }).addCase(fetchProductsThunk.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchProducts","fetchProductsThunk","categoryId","data","error","Error","message","productsSlice","name","initialState","items","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","products","rejected","reducer"],"sources":["D:/Projects/ecommerce-app/src/redux/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { fetchProducts } from '../apis/fetchProducts'; \r\n\r\nexport const fetchProductsThunk = createAsyncThunk('products/fetchProducts', async (categoryId) => {\r\n    try {\r\n        const data = await fetchProducts(categoryId);\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(error.message);\r\n    }\r\n});\r\n\r\nconst productsSlice = createSlice({\r\n    name: 'products',\r\n    initialState: {\r\n        items: [],\r\n        status: 'idle',\r\n        error: null,\r\n    },\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchProductsThunk.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchProductsThunk.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.items = action.payload.products;\r\n            })\r\n            .addCase(fetchProductsThunk.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            });\r\n    },\r\n});\r\n\r\nexport default productsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,aAAa,QAAQ,uBAAuB;AAErD,OAAO,MAAMC,kBAAkB,GAAGF,gBAAgB,CAAC,wBAAwB,EAAE,MAAOG,UAAU,IAAK;EAC/F,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMH,aAAa,CAACE,UAAU,CAAC;IAC5C,OAAOC,IAAI;EACf,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;EAClC;AACJ,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAGT,WAAW,CAAC;EAC9BU,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,MAAM;IACdP,KAAK,EAAE;EACX,CAAC;EACDQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACd,kBAAkB,CAACe,OAAO,EAAGC,KAAK,IAAK;MAC5CA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDI,OAAO,CAACd,kBAAkB,CAACiB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACP,KAAK,GAAGS,MAAM,CAACC,OAAO,CAACC,QAAQ;IACzC,CAAC,CAAC,CACDN,OAAO,CAACd,kBAAkB,CAACqB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAACN,MAAM,GAAG,QAAQ;MACvBM,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACf,KAAK,CAACE,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeC,aAAa,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}