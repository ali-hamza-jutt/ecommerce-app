{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { auth } from \"../Authentication/firebase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nexport const signup = createAsyncThunk(\"user/signup\", async ({\n  firstName,\n  email,\n  password\n}) => {\n  const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n  console.log(userCredential);\n  return {\n    firstName: firstName,\n    user: userCredential.user\n  };\n});\nexport const login = createAsyncThunk(\"user/login\", async ({\n  email,\n  password\n}) => {\n  const userCredential = await signInWithEmailAndPassword(auth, email, password);\n  console.log(userCredential.user);\n  return userCredential.user;\n});\nconst initialState = {\n  userData: {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    longitude: 0,\n    latitude: 0,\n    locationName: \"\"\n  },\n  loading: false\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    getCoordinates(state, action) {\n      state.longitude = action.payload.longitude;\n      state.latitude = action.payload.latitude;\n    },\n    logout(state) {\n      state.userData = {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        longitude: 0,\n        latitude: 0,\n        locationName: \"\"\n      };\n    },\n    setProfileData(state, action) {\n      state.userData.email = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(signup.pending, state => {\n      state.loading = true;\n    }).addCase(signup.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userData.name = action.payload.firstName;\n    }).addCase(signup.rejected, state => {\n      state.loading = false;\n    });\n    builder.addCase(login.pending, state => {\n      state.loading = true;\n    }).addCase(login.fulfilled, state => {\n      state.loading = false;\n    }).addCase(login.rejected, state => {\n      state.loading = false;\n    });\n  }\n});\nexport default userSlice.reducer;\nexport const {\n  getCoordinates,\n  logout,\n  setProfileData\n} = userSlice.actions;\nexport const selectUserData = state => state.user.userData;","map":{"version":3,"names":["createSlice","createAsyncThunk","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signup","firstName","email","password","userCredential","console","log","user","login","initialState","userData","name","longitude","latitude","locationName","loading","userSlice","reducers","getCoordinates","state","action","payload","logout","setProfileData","extraReducers","builder","addCase","pending","fulfilled","rejected","reducer","actions","selectUserData"],"sources":["D:/Projects/ecommerce-app/src/redux/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { auth } from \"../Authentication/firebase\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nexport const signup = createAsyncThunk(\r\n  \"user/signup\",\r\n  async ({ firstName, email, password }) => {\r\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    console.log(userCredential);\r\n    return { firstName: firstName, user: userCredential.user };\r\n  }\r\n);\r\n\r\nexport const login = createAsyncThunk(\"user/login\", async ({ email, password }) => {\r\n  const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n  console.log(userCredential.user);\r\n  return userCredential.user;\r\n});\r\n\r\nconst initialState = {\r\n  userData: {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    longitude: 0,\r\n    latitude: 0,\r\n    locationName: \"\",\r\n  },\r\n  loading: false,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    getCoordinates(state, action) {\r\n      state.longitude = action.payload.longitude;\r\n      state.latitude = action.payload.latitude;\r\n    },\r\n    logout(state) {\r\n      state.userData = {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        longitude: 0,\r\n        latitude: 0,\r\n        locationName: \"\",\r\n      };\r\n    },\r\n    setProfileData(state, action) {\r\n      state.userData.email = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(signup.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(signup.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.userData.name = action.payload.firstName;\r\n      })\r\n      .addCase(signup.rejected, (state) => {\r\n        state.loading = false;\r\n      });\r\n\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(login.fulfilled, (state) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(login.rejected, (state) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n\r\nexport const { getCoordinates, logout, setProfileData } = userSlice.actions;\r\n\r\nexport const selectUserData = (state) => state.user.userData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}