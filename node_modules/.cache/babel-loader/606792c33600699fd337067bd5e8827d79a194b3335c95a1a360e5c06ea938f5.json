{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { auth } from \"../Authentication/firebase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nexport const singup = createAsyncThunk(\"singup\", async ({\n  firstName,\n  email,\n  password\n}) => {\n  const singup = await createUserWithEmailAndPassword(auth, email, password);\n  console.log(singup);\n  return {\n    firstName: firstName,\n    user: singup.user\n  };\n});\nexport const login = createAsyncThunk(\"login\", async ({\n  email,\n  password\n}) => {\n  const singIn = await signInWithEmailAndPassword(auth, email, password);\n  console.log(singIn.user);\n  //return singIn.user;\n});\nlet initialState = {\n  userData: {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    longitude: 0,\n    latitude: 0,\n    locationName: \"\"\n  },\n  loading: false\n};\nconst userSlice = createSlice({\n  name: \"Authentication\",\n  initialState,\n  reducers: {\n    getCoordinates(state, action) {\n      state.longitude = action.payload.longitude;\n      state.latitude = action.payload.latitude;\n    },\n    LogOut(state, action) {\n      state.name = \"\";\n      state.longitude = 0;\n      state.latitude = 0;\n      state.locationName = \"\";\n      state.email = \"\";\n    },\n    setProfileData(state, action) {\n      state.userData.email = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(singup.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(singup.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userData.name = action.payload.firstName;\n    });\n    builder.addCase(singup.rejected, (state, action) => {\n      state.loading = false;\n    });\n    builder.addCase(login.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n    });\n    builder.addCase(login.rejected, state => {\n      state.loading = false;\n    });\n  }\n});\nexport default userSlice.reducer;\nexport const userData = state => state.userData.userData;\nexport const getCoordsAction = userSlice.getCoordinates;\nexport const {\n  LogOut,\n  setProfileData\n} = userSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","singup","firstName","email","password","console","log","user","login","singIn","initialState","userData","name","longitude","latitude","locationName","loading","userSlice","reducers","getCoordinates","state","action","payload","LogOut","setProfileData","extraReducers","builder","addCase","pending","fulfilled","rejected","reducer","getCoordsAction","actions"],"sources":["D:/Projects/ecommerce-app/src/redux/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { auth } from \"../Authentication/firebase\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\n\r\nexport const singup = createAsyncThunk(\r\n  \"singup\",\r\n  async ({ firstName, email, password }) => {\r\n    const singup = await createUserWithEmailAndPassword(auth, email, password);\r\n    console.log(singup);\r\n    return { firstName: firstName, user: singup.user };\r\n  }\r\n);\r\n\r\nexport const login = createAsyncThunk(\"login\", async ({ email, password }) => {\r\n  const singIn = await signInWithEmailAndPassword(auth, email, password);\r\n\r\n  console.log(singIn.user);\r\n  //return singIn.user;\r\n});\r\nlet initialState = {\r\n  userData: {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    longitude: 0,\r\n    latitude: 0,\r\n    locationName: \"\",\r\n  },\r\n  loading: false,\r\n};\r\nconst userSlice = createSlice({\r\n  name: \"Authentication\",\r\n  initialState,\r\n  reducers: {\r\n    getCoordinates(state, action) {\r\n      state.longitude = action.payload.longitude;\r\n      state.latitude = action.payload.latitude;\r\n    },\r\n    LogOut(state, action) {\r\n      state.name = \"\";\r\n      state.longitude = 0;\r\n      state.latitude = 0;\r\n      state.locationName = \"\";\r\n      state.email = \"\";\r\n    },\r\n    setProfileData(state, action) {\r\n      state.userData.email = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(singup.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(singup.fulfilled, (state, action) => {\r\n      state.loading = false;\r\n\r\n      state.userData.name = action.payload.firstName;\r\n    });\r\n    builder.addCase(singup.rejected, (state, action) => {\r\n      state.loading = false;\r\n    });\r\n\r\n    builder.addCase(login.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(login.fulfilled, (state, action) => {\r\n      state.loading = false;\r\n    });\r\n    builder.addCase(login.rejected, (state) => {\r\n      state.loading = false;\r\n    });\r\n  },\r\n});\r\nexport default userSlice.reducer;\r\n\r\nexport const userData = (state) => state.userData.userData;\r\n\r\nexport const getCoordsAction = userSlice.getCoordinates;\r\n\r\nexport const { LogOut, setProfileData } = userSlice.actions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}